#! /bin/bash

set -e

if [[ $# -ne 2 ]] ; then
    echo "Error: Invalid number of parameters"
    echo "Correct usage: ./linux/oav-custom/$(basename "$0") <x64|arm64> <deb_depends>" >&2
    exit 1
fi

if [[ ! -e pubspec.yaml ]] ; then
    echo "Error: The $(basename "$0") script must be run from the root of a Flutter project" >&2
    exit 1
fi

set -x

export flutter_arch="$1"
export deb_depends="$2"

if [[ $flutter_arch = x64 ]] ; then
    deb_arch=amd64
    bundle_arch=x86_64
elif [[ $flutter_arch = arm64 ]] ; then
    deb_arch=arm64
    bundle_arch=aarch64
else
    echo "Invalid Flutter arch. Must be either 'x64' or 'arm64'." >&2
    exit 1
fi

if [[ $(which flutter 2> /dev/null) == "" ]] ; then
    export use_flutter_git=true
else
    export use_flutter_git=false
fi

[[ $use_flutter_git == true ]] && export PATH="$PATH:$(pwd)/.flutter/bin/"

. /etc/os-release
export distro_name="$ID"
export distro_release="-$VERSION_CODENAME"
[[ "$distro_release" == "-" ]] &&  export distro_release=""

export version="$(grep -e "^version: " < pubspec.yaml | sed -e "s/^version:\s*//; s/[+][0-9]*\s*$//")"
export version="${version}-1${distro_name}${distro_release}"

export bundle_name="oav-bundle-${distro_name}${distro_release}-${bundle_arch}"
export deb_dir=open-alert-viewer_"${version}"

if [[ -e ./${bundle_name} ]] ; then
    echo "Error, build files for .deb creation are already present here." >&2
    echo "Consider wiping the untracked files with: git clean -fxd" >&2
    exit 1
fi

if [[ $use_flutter_git == true ]] ; then
    git submodule init
    git submodule update
    flutter channel stable --disable-analytics
fi

flutter doctor --verbose
flutter pub get
flutter build linux --release

mv build/linux/"${flutter_arch}"/release/bundle "${bundle_name}"
tar czf "${bundle_name}".tar.gz "${bundle_name}"

echo "Building .deb package..."

mkdir -p "${deb_dir}"
cd "${deb_dir}"
mkdir -p ./DEBIAN ./usr/{bin,lib/open-alert-viewer,share/applications,share/icons/hicolor/scalable/apps}/
sed -e "s/VERSION/${version}/; s/ARCHITECTURE/${deb_arch}/; s/DEPENDS/${deb_depends}/" < ../linux/oav-custom/debian/control.template > DEBIAN/control
cp -R ../"${bundle_name}"/* usr/lib/open-alert-viewer/
ln -s ../lib/open-alert-viewer/open_alert_viewer usr/bin/open_alert_viewer
install -Dm644 ../assets/icon/open_alert_viewer_circle_full.svg usr/share/icons/hicolor/scalable/apps/studio.okcode.open_alert_viewer.svg
install -Dm644 ../linux/oav-custom/studio.okcode.open_alert_viewer.desktop usr/share/applications/studio.okcode.open_alert_viewer.desktop
for size in 16 22 24 32 64 128 256 ; do
    rm -f scaled.png
    convert assets/icon/open_alert_viewer_circle_full.png -resize "${size}x${size}" scaled.png
    install -Dm644 scaled.png usr/share/icons/hicolor/"${size}x${size}"/studio.okcode.open_alert_viewer.png
done
cd ..
dpkg-deb --build "${deb_dir}"
mv "${deb_dir}".deb open-alert-viewer-"${bundle_arch}"_"${version}".deb

